<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>vehicle-enquiry-service</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>iep-vvr</groupId>
        <artifactId>iep-vvr</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <properties>
        <SERVICE_ENQUIRY_USERNAME>enquiry</SERVICE_ENQUIRY_USERNAME>
        <SERVICE_ENQUIRY_USERID>5001</SERVICE_ENQUIRY_USERID>
        <SERVICE_ENQUIRY_GROUPNAME>enquiry</SERVICE_ENQUIRY_GROUPNAME>
    </properties>


    <dependencies>
        <dependency>
            <groupId>iep-vvr</groupId>
            <artifactId>domain</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>iep-vvr</groupId>
            <artifactId>common-service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.3-1100-jdbc41</version>
        </dependency>
        <dependency>
            <groupId>com.gilt.jdbi-scala</groupId>
            <artifactId>jdbi-scala_2.10</artifactId>
            <version>0.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.dropwizard</groupId>
            <artifactId>dropwizard-client</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.dropwizard</groupId>
            <artifactId>dropwizard-auth</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.dropwizard</groupId>
            <artifactId>dropwizard-jdbi</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>com.massrelevance</groupId>
            <artifactId>dropwizard-scala_2.10</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>net.devlab722</groupId>
            <artifactId>logstash-logback-encoder-bundle</artifactId>
            <version>0.6.2</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-jaxrs_2.10</artifactId>
            <version>1.3.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>uk.gov.dvla.services.enquiry.vehicle.VehicleEnquiryService</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <configuration>
                            <tasks>
                                <echo file="target/${project.artifactId}.txt">
                                    <![CDATA[
USER=${SERVICE_ENQUIRY_USERNAME}
                                    ]]>
                                </echo>
                                <echo file="target/emptyFile.json">
                                    <![CDATA[
{}
                                    ]]>
                                </echo>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-3</version>
                <configuration>
                    <group>Kainos</group>
                    <vendor>Kainos</vendor>
                    <targetVendor>linux</targetVendor>
                    <targetOS>linux</targetOS>
                    <release>${build.number}</release>
                    <version>${version.major}.${version.minor}</version>
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                    </defineStatements>
                    <mappings>
                        <!--jar mappings-->
                        <mapping>
                            <directory>/opt/${project.artifactId}</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                        </mapping>
                        <mapping>
                            <directory>/opt/${project.artifactId}/lib</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                        </mapping>

                        <mapping>
                            <directory>/opt/${project.artifactId}/lib</directory>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <destination>${project.artifactId}.jar</destination>
                                    <location>target/${jar.name}-jar-with-dependencies.jar</location>
                                </source>
                            </sources>
                        </mapping>
                        <!--log mappings-->
                        <mapping>
                            <directory>/var/log/${project.artifactId}</directory>
                            <filemode>750</filemode>
                            <username>${SERVICE_ENQUIRY_USERNAME}</username>
                            <groupname>${SERVICE_ENQUIRY_GROUPNAME}</groupname>
                        </mapping>
                        <!--daemonscript mappings-->
                        <mapping>
                            <directory>/etc/init.d</directory>
                            <username>root</username>
                            <groupname>root</groupname>
                            <filemode>755</filemode>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <destination>${project.artifactId}</destination>
                                    <location>../batch/demonize-service-script</location>
                                </source>
                            </sources>
                        </mapping>
                        <!--sysconfig mappings-->
                        <mapping>
                            <directory>/etc/sysconfig</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <username>root</username>
                            <groupname>root</groupname>
                            <filemode>644</filemode>
                            <sources>
                                <source>
                                    <destination>${project.artifactId}</destination>
                                    <location>target/${project.artifactId}.txt</location>
                                </source>
                            </sources>
                        </mapping>
                        <!--empty conf mappings-->
                        <mapping>
                            <directory>/etc</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <username>root</username>
                            <groupname>${SERVICE_ENQUIRY_GROUPNAME}</groupname>
                            <configuration>true</configuration>
                            <filemode>640</filemode>
                            <sources>
                                <source>
                                    <destination>${project.artifactId}.conf</destination>
                                    <location>target/emptyFile.json</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>
                            <![CDATA[
restart_file=/var/tmp/${project.artifactId}-restart
if [ $1 -gt 1 ] ; then
test -f $restart_file && rm $restart_file
service %{name} status >/dev/null
if [ $? -eq 0 ]; then
touch $restart_file
service %{name} stop >/dev/null
fi
else
/usr/bin/getent passwd ${SERVICE_ENQUIRY_USERNAME} > /dev/null || /usr/sbin/useradd -d /opt/${project.artifactId} -u ${SERVICE_ENQUIRY_USERID} -s /sbin/nologin ${SERVICE_ENQUIRY_USERNAME}
fi

                            ]]>
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            <![CDATA[
restart_file=/var/tmp/${project.artifactId}-restart
if [ $1 -gt 1 ]; then
if [ -f $restart_file ]; then
service ${project.artifactId} start > /dev/null
rm $restart_file
fi
else
/sbin/chkconfig --add ${project.artifactId}
fi

                            ]]>
                        </script>
                    </postinstallScriptlet>
                    <requires>
                        <require>daemonize</require>
                        <require>java-1.7.0-openjdk</require>
                    </requires>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>